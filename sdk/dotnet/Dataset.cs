// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ns1
{
    [Ns1ResourceType("ns1:index/dataset:Dataset")]
    public partial class Dataset : global::Pulumi.CustomResource
    {
        [Output("datatype")]
        public Output<Outputs.DatasetDatatype> Datatype { get; private set; } = null!;

        [Output("exportType")]
        public Output<string> ExportType { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("recipientEmails")]
        public Output<ImmutableArray<string>> RecipientEmails { get; private set; } = null!;

        [Output("repeat")]
        public Output<Outputs.DatasetRepeat?> Repeat { get; private set; } = null!;

        [Output("reports")]
        public Output<ImmutableArray<Outputs.DatasetReport>> Reports { get; private set; } = null!;

        [Output("timeframe")]
        public Output<Outputs.DatasetTimeframe> Timeframe { get; private set; } = null!;


        /// <summary>
        /// Create a Dataset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Dataset(string name, DatasetArgs args, CustomResourceOptions? options = null)
            : base("ns1:index/dataset:Dataset", name, args ?? new DatasetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Dataset(string name, Input<string> id, DatasetState? state = null, CustomResourceOptions? options = null)
            : base("ns1:index/dataset:Dataset", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Dataset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Dataset Get(string name, Input<string> id, DatasetState? state = null, CustomResourceOptions? options = null)
        {
            return new Dataset(name, id, state, options);
        }
    }

    public sealed class DatasetArgs : global::Pulumi.ResourceArgs
    {
        [Input("datatype", required: true)]
        public Input<Inputs.DatasetDatatypeArgs> Datatype { get; set; } = null!;

        [Input("exportType", required: true)]
        public Input<string> ExportType { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipientEmails")]
        private InputList<string>? _recipientEmails;
        public InputList<string> RecipientEmails
        {
            get => _recipientEmails ?? (_recipientEmails = new InputList<string>());
            set => _recipientEmails = value;
        }

        [Input("repeat")]
        public Input<Inputs.DatasetRepeatArgs>? Repeat { get; set; }

        [Input("timeframe", required: true)]
        public Input<Inputs.DatasetTimeframeArgs> Timeframe { get; set; } = null!;

        public DatasetArgs()
        {
        }
        public static new DatasetArgs Empty => new DatasetArgs();
    }

    public sealed class DatasetState : global::Pulumi.ResourceArgs
    {
        [Input("datatype")]
        public Input<Inputs.DatasetDatatypeGetArgs>? Datatype { get; set; }

        [Input("exportType")]
        public Input<string>? ExportType { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipientEmails")]
        private InputList<string>? _recipientEmails;
        public InputList<string> RecipientEmails
        {
            get => _recipientEmails ?? (_recipientEmails = new InputList<string>());
            set => _recipientEmails = value;
        }

        [Input("repeat")]
        public Input<Inputs.DatasetRepeatGetArgs>? Repeat { get; set; }

        [Input("reports")]
        private InputList<Inputs.DatasetReportGetArgs>? _reports;
        public InputList<Inputs.DatasetReportGetArgs> Reports
        {
            get => _reports ?? (_reports = new InputList<Inputs.DatasetReportGetArgs>());
            set => _reports = value;
        }

        [Input("timeframe")]
        public Input<Inputs.DatasetTimeframeGetArgs>? Timeframe { get; set; }

        public DatasetState()
        {
        }
        public static new DatasetState Empty => new DatasetState();
    }
}

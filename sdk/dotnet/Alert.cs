// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ns1
{
    /// <summary>
    /// Provides a NS1 Alert resource. This can be used to create, modify, and delete alerts.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ns1 = Pulumi.Ns1;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleZoneAlert = new Ns1.Alert("example_zone_alert", new()
    ///     {
    ///         Name = "Example Zone Alert",
    ///         Type = "zone",
    ///         Subtype = "transfer_failed",
    ///         NotificationLists = new[] {},
    ///         ZoneNames = new[]
    ///         {
    ///             "a.b.c.com",
    ///             "myzone",
    ///         },
    ///         RecordIds = new[] {},
    ///     });
    /// 
    ///     var exampleUsageAlert = new Ns1.Alert("example_usage_alert", new()
    ///     {
    ///         Name = "Example Usage Alert",
    ///         Type = "account",
    ///         Subtype = "record_usage",
    ///         Datas = new[]
    ///         {
    ///             new Ns1.Inputs.AlertDataArgs
    ///             {
    ///                 AlertAtPercent = 80,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## NS1 Documentation
    /// 
    /// [Alerts Api Doc](https://ns1.com/api#alerts)
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import ns1:index/alert:Alert &lt;name&gt; &lt;alert_id&gt;`
    /// ```
    /// </summary>
    [Ns1ResourceType("ns1:index/alert:Alert")]
    public partial class Alert : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Read Only) The Unix timestamp representing when the alert configuration was created.
        /// </summary>
        [Output("createdAt")]
        public Output<int> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// (Read Only) The user or apikey that created this alert.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// A resource block with additional settings: the name and type of them vary based on the alert type.
        /// </summary>
        [Output("datas")]
        public Output<ImmutableArray<Outputs.AlertData>> Datas { get; private set; } = null!;

        /// <summary>
        /// The free-form display name for the alert.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of id's for notification lists whose notifiers will be triggered by the alert.
        /// </summary>
        [Output("notificationLists")]
        public Output<ImmutableArray<string>> NotificationLists { get; private set; } = null!;

        /// <summary>
        /// A list of record id's this alert applies to.
        /// </summary>
        [Output("recordIds")]
        public Output<ImmutableArray<string>> RecordIds { get; private set; } = null!;

        /// <summary>
        /// The type of the alert.
        /// </summary>
        [Output("subtype")]
        public Output<string> Subtype { get; private set; } = null!;

        /// <summary>
        /// The type of the alert.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// (Read Only) The Unix timestamp representing when the alert configuration was last modified.
        /// </summary>
        [Output("updatedAt")]
        public Output<int> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// (Read Only) The user or apikey that last modified this alert.
        /// </summary>
        [Output("updatedBy")]
        public Output<string> UpdatedBy { get; private set; } = null!;

        /// <summary>
        /// A list of zones this alert applies to.
        /// </summary>
        [Output("zoneNames")]
        public Output<ImmutableArray<string>> ZoneNames { get; private set; } = null!;


        /// <summary>
        /// Create a Alert resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Alert(string name, AlertArgs args, CustomResourceOptions? options = null)
            : base("ns1:index/alert:Alert", name, args ?? new AlertArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Alert(string name, Input<string> id, AlertState? state = null, CustomResourceOptions? options = null)
            : base("ns1:index/alert:Alert", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Alert resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Alert Get(string name, Input<string> id, AlertState? state = null, CustomResourceOptions? options = null)
        {
            return new Alert(name, id, state, options);
        }
    }

    public sealed class AlertArgs : global::Pulumi.ResourceArgs
    {
        [Input("datas")]
        private InputList<Inputs.AlertDataArgs>? _datas;

        /// <summary>
        /// A resource block with additional settings: the name and type of them vary based on the alert type.
        /// </summary>
        public InputList<Inputs.AlertDataArgs> Datas
        {
            get => _datas ?? (_datas = new InputList<Inputs.AlertDataArgs>());
            set => _datas = value;
        }

        /// <summary>
        /// The free-form display name for the alert.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationLists")]
        private InputList<string>? _notificationLists;

        /// <summary>
        /// A list of id's for notification lists whose notifiers will be triggered by the alert.
        /// </summary>
        public InputList<string> NotificationLists
        {
            get => _notificationLists ?? (_notificationLists = new InputList<string>());
            set => _notificationLists = value;
        }

        [Input("recordIds")]
        private InputList<string>? _recordIds;

        /// <summary>
        /// A list of record id's this alert applies to.
        /// </summary>
        public InputList<string> RecordIds
        {
            get => _recordIds ?? (_recordIds = new InputList<string>());
            set => _recordIds = value;
        }

        /// <summary>
        /// The type of the alert.
        /// </summary>
        [Input("subtype", required: true)]
        public Input<string> Subtype { get; set; } = null!;

        /// <summary>
        /// The type of the alert.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("zoneNames")]
        private InputList<string>? _zoneNames;

        /// <summary>
        /// A list of zones this alert applies to.
        /// </summary>
        public InputList<string> ZoneNames
        {
            get => _zoneNames ?? (_zoneNames = new InputList<string>());
            set => _zoneNames = value;
        }

        public AlertArgs()
        {
        }
        public static new AlertArgs Empty => new AlertArgs();
    }

    public sealed class AlertState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Read Only) The Unix timestamp representing when the alert configuration was created.
        /// </summary>
        [Input("createdAt")]
        public Input<int>? CreatedAt { get; set; }

        /// <summary>
        /// (Read Only) The user or apikey that created this alert.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        [Input("datas")]
        private InputList<Inputs.AlertDataGetArgs>? _datas;

        /// <summary>
        /// A resource block with additional settings: the name and type of them vary based on the alert type.
        /// </summary>
        public InputList<Inputs.AlertDataGetArgs> Datas
        {
            get => _datas ?? (_datas = new InputList<Inputs.AlertDataGetArgs>());
            set => _datas = value;
        }

        /// <summary>
        /// The free-form display name for the alert.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationLists")]
        private InputList<string>? _notificationLists;

        /// <summary>
        /// A list of id's for notification lists whose notifiers will be triggered by the alert.
        /// </summary>
        public InputList<string> NotificationLists
        {
            get => _notificationLists ?? (_notificationLists = new InputList<string>());
            set => _notificationLists = value;
        }

        [Input("recordIds")]
        private InputList<string>? _recordIds;

        /// <summary>
        /// A list of record id's this alert applies to.
        /// </summary>
        public InputList<string> RecordIds
        {
            get => _recordIds ?? (_recordIds = new InputList<string>());
            set => _recordIds = value;
        }

        /// <summary>
        /// The type of the alert.
        /// </summary>
        [Input("subtype")]
        public Input<string>? Subtype { get; set; }

        /// <summary>
        /// The type of the alert.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// (Read Only) The Unix timestamp representing when the alert configuration was last modified.
        /// </summary>
        [Input("updatedAt")]
        public Input<int>? UpdatedAt { get; set; }

        /// <summary>
        /// (Read Only) The user or apikey that last modified this alert.
        /// </summary>
        [Input("updatedBy")]
        public Input<string>? UpdatedBy { get; set; }

        [Input("zoneNames")]
        private InputList<string>? _zoneNames;

        /// <summary>
        /// A list of zones this alert applies to.
        /// </summary>
        public InputList<string> ZoneNames
        {
            get => _zoneNames ?? (_zoneNames = new InputList<string>());
            set => _zoneNames = value;
        }

        public AlertState()
        {
        }
        public static new AlertState Empty => new AlertState();
    }
}

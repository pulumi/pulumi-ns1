// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ns1

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a NS1 Notify List resource. This can be used to create, modify, and delete notify lists.
//
//
// ## NS1 Documentation
//
// [NotifyList Api Doc](https://ns1.com/api#notification-lists)
type NotifyList struct {
	pulumi.CustomResourceState

	// The free-form display name for the notify list.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of notifiers. All notifiers in a notification list will receive notifications whenever an event is send to the list (e.g., when a monitoring job fails). Notifiers are documented below.
	Notifications NotifyListNotificationArrayOutput `pulumi:"notifications"`
}

// NewNotifyList registers a new resource with the given unique name, arguments, and options.
func NewNotifyList(ctx *pulumi.Context,
	name string, args *NotifyListArgs, opts ...pulumi.ResourceOption) (*NotifyList, error) {
	if args == nil {
		args = &NotifyListArgs{}
	}
	var resource NotifyList
	err := ctx.RegisterResource("ns1:index/notifyList:NotifyList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotifyList gets an existing NotifyList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotifyList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotifyListState, opts ...pulumi.ResourceOption) (*NotifyList, error) {
	var resource NotifyList
	err := ctx.ReadResource("ns1:index/notifyList:NotifyList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotifyList resources.
type notifyListState struct {
	// The free-form display name for the notify list.
	Name *string `pulumi:"name"`
	// A list of notifiers. All notifiers in a notification list will receive notifications whenever an event is send to the list (e.g., when a monitoring job fails). Notifiers are documented below.
	Notifications []NotifyListNotification `pulumi:"notifications"`
}

type NotifyListState struct {
	// The free-form display name for the notify list.
	Name pulumi.StringPtrInput
	// A list of notifiers. All notifiers in a notification list will receive notifications whenever an event is send to the list (e.g., when a monitoring job fails). Notifiers are documented below.
	Notifications NotifyListNotificationArrayInput
}

func (NotifyListState) ElementType() reflect.Type {
	return reflect.TypeOf((*notifyListState)(nil)).Elem()
}

type notifyListArgs struct {
	// The free-form display name for the notify list.
	Name *string `pulumi:"name"`
	// A list of notifiers. All notifiers in a notification list will receive notifications whenever an event is send to the list (e.g., when a monitoring job fails). Notifiers are documented below.
	Notifications []NotifyListNotification `pulumi:"notifications"`
}

// The set of arguments for constructing a NotifyList resource.
type NotifyListArgs struct {
	// The free-form display name for the notify list.
	Name pulumi.StringPtrInput
	// A list of notifiers. All notifiers in a notification list will receive notifications whenever an event is send to the list (e.g., when a monitoring job fails). Notifiers are documented below.
	Notifications NotifyListNotificationArrayInput
}

func (NotifyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notifyListArgs)(nil)).Elem()
}

# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetDNSSecResult:
    """
    A collection of values returned by getDNSSec.
    """
    def __init__(__self__, delegation=None, id=None, keys=None, zone=None):
        if delegation and not isinstance(delegation, dict):
            raise TypeError("Expected argument 'delegation' to be a dict")
        __self__.delegation = delegation
        """
        (Computed) - Delegation field is documented
        below.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if keys and not isinstance(keys, dict):
            raise TypeError("Expected argument 'keys' to be a dict")
        __self__.keys = keys
        """
        (Computed) - Keys field is documented below.
        """
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        __self__.zone = zone
class AwaitableGetDNSSecResult(GetDNSSecResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDNSSecResult(
            delegation=self.delegation,
            id=self.id,
            keys=self.keys,
            zone=self.zone)

def get_dns_sec(zone=None,opts=None):
    """
    Provides DNSSEC details about a NS1 Zone.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ns1 as ns1

    # Get DNSSEC details about a NS1 Zone.
    example_zone = ns1.Zone("exampleZone",
        dnssec=True,
        zone="terraform.example.io")
    example_dns_sec = example_zone.zone.apply(lambda zone: ns1.get_dns_sec(zone=zone))
    ```


    :param str zone: The name of the zone to get DNSSEC details for.
    """
    __args__ = dict()


    __args__['zone'] = zone
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('ns1:index/getDNSSec:getDNSSec', __args__, opts=opts).value

    return AwaitableGetDNSSecResult(
        delegation=__ret__.get('delegation'),
        id=__ret__.get('id'),
        keys=__ret__.get('keys'),
        zone=__ret__.get('zone'))

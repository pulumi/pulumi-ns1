# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetMonitoringRegionsResult',
    'AwaitableGetMonitoringRegionsResult',
    'get_monitoring_regions',
    'get_monitoring_regions_output',
]

@pulumi.output_type
class GetMonitoringRegionsResult:
    """
    A collection of values returned by getMonitoringRegions.
    """
    def __init__(__self__, id=None, regions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if regions and not isinstance(regions, list):
            raise TypeError("Expected argument 'regions' to be a list")
        pulumi.set(__self__, "regions", regions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def regions(self) -> Optional[Sequence['outputs.GetMonitoringRegionsRegionResult']]:
        """
        A set of the available monitoring regions. Regions is
        documented below.
        """
        return pulumi.get(self, "regions")


class AwaitableGetMonitoringRegionsResult(GetMonitoringRegionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMonitoringRegionsResult(
            id=self.id,
            regions=self.regions)


def get_monitoring_regions(regions: Optional[Sequence[pulumi.InputType['GetMonitoringRegionsRegionArgs']]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMonitoringRegionsResult:
    """
    Provides details of all available monitoring regions.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_ns1 as ns1

    example = ns1.get_monitoring_regions()
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetMonitoringRegionsRegionArgs']] regions: A set of the available monitoring regions. Regions is
           documented below.
    """
    __args__ = dict()
    __args__['regions'] = regions
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ns1:index/getMonitoringRegions:getMonitoringRegions', __args__, opts=opts, typ=GetMonitoringRegionsResult).value

    return AwaitableGetMonitoringRegionsResult(
        id=pulumi.get(__ret__, 'id'),
        regions=pulumi.get(__ret__, 'regions'))


@_utilities.lift_output_func(get_monitoring_regions)
def get_monitoring_regions_output(regions: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetMonitoringRegionsRegionArgs']]]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMonitoringRegionsResult]:
    """
    Provides details of all available monitoring regions.

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_ns1 as ns1

    example = ns1.get_monitoring_regions()
    ```
    <!--End PulumiCodeChooser -->


    :param Sequence[pulumi.InputType['GetMonitoringRegionsRegionArgs']] regions: A set of the available monitoring regions. Regions is
           documented below.
    """
    ...

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZoneArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZoneArgs Empty = new GetZoneArgs();

    @Import(name="additionalPorts")
    private @Nullable Output<List<Integer>> additionalPorts;

    public Optional<Output<List<Integer>>> additionalPorts() {
        return Optional.ofNullable(this.additionalPorts);
    }

    /**
     * List of additional IPv4 addresses for the primary
     * zone.
     * 
     */
    @Import(name="additionalPrimaries")
    private @Nullable Output<List<String>> additionalPrimaries;

    /**
     * @return List of additional IPv4 addresses for the primary
     * zone.
     * 
     */
    public Optional<Output<List<String>>> additionalPrimaries() {
        return Optional.ofNullable(this.additionalPrimaries);
    }

    @Import(name="primaryPort")
    private @Nullable Output<Integer> primaryPort;

    public Optional<Output<Integer>> primaryPort() {
        return Optional.ofNullable(this.primaryPort);
    }

    /**
     * The domain name of the zone.
     * 
     */
    @Import(name="zone", required=true)
    private Output<String> zone;

    /**
     * @return The domain name of the zone.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    private GetZoneArgs() {}

    private GetZoneArgs(GetZoneArgs $) {
        this.additionalPorts = $.additionalPorts;
        this.additionalPrimaries = $.additionalPrimaries;
        this.primaryPort = $.primaryPort;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZoneArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZoneArgs $;

        public Builder() {
            $ = new GetZoneArgs();
        }

        public Builder(GetZoneArgs defaults) {
            $ = new GetZoneArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalPorts(@Nullable Output<List<Integer>> additionalPorts) {
            $.additionalPorts = additionalPorts;
            return this;
        }

        public Builder additionalPorts(List<Integer> additionalPorts) {
            return additionalPorts(Output.of(additionalPorts));
        }

        public Builder additionalPorts(Integer... additionalPorts) {
            return additionalPorts(List.of(additionalPorts));
        }

        /**
         * @param additionalPrimaries List of additional IPv4 addresses for the primary
         * zone.
         * 
         * @return builder
         * 
         */
        public Builder additionalPrimaries(@Nullable Output<List<String>> additionalPrimaries) {
            $.additionalPrimaries = additionalPrimaries;
            return this;
        }

        /**
         * @param additionalPrimaries List of additional IPv4 addresses for the primary
         * zone.
         * 
         * @return builder
         * 
         */
        public Builder additionalPrimaries(List<String> additionalPrimaries) {
            return additionalPrimaries(Output.of(additionalPrimaries));
        }

        /**
         * @param additionalPrimaries List of additional IPv4 addresses for the primary
         * zone.
         * 
         * @return builder
         * 
         */
        public Builder additionalPrimaries(String... additionalPrimaries) {
            return additionalPrimaries(List.of(additionalPrimaries));
        }

        public Builder primaryPort(@Nullable Output<Integer> primaryPort) {
            $.primaryPort = primaryPort;
            return this;
        }

        public Builder primaryPort(Integer primaryPort) {
            return primaryPort(Output.of(primaryPort));
        }

        /**
         * @param zone The domain name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zone(Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The domain name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public GetZoneArgs build() {
            if ($.zone == null) {
                throw new MissingRequiredPropertyException("GetZoneArgs", "zone");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBillingUsagePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBillingUsagePlainArgs Empty = new GetBillingUsagePlainArgs();

    /**
     * The start timestamp for the data range in Unix epoch format.
     * 
     */
    @Import(name="from")
    private @Nullable Integer from;

    /**
     * @return The start timestamp for the data range in Unix epoch format.
     * 
     */
    public Optional<Integer> from() {
        return Optional.ofNullable(this.from);
    }

    /**
     * The type of billing metric to retrieve. Must be one of: `queries`, `limits`, `decisions`, `filter-chains`, `monitors`, `records`.
     * 
     */
    @Import(name="metricType", required=true)
    private String metricType;

    /**
     * @return The type of billing metric to retrieve. Must be one of: `queries`, `limits`, `decisions`, `filter-chains`, `monitors`, `records`.
     * 
     */
    public String metricType() {
        return this.metricType;
    }

    /**
     * The end timestamp for the data range in Unix epoch format.
     * 
     */
    @Import(name="to")
    private @Nullable Integer to;

    /**
     * @return The end timestamp for the data range in Unix epoch format.
     * 
     */
    public Optional<Integer> to() {
        return Optional.ofNullable(this.to);
    }

    private GetBillingUsagePlainArgs() {}

    private GetBillingUsagePlainArgs(GetBillingUsagePlainArgs $) {
        this.from = $.from;
        this.metricType = $.metricType;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBillingUsagePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBillingUsagePlainArgs $;

        public Builder() {
            $ = new GetBillingUsagePlainArgs();
        }

        public Builder(GetBillingUsagePlainArgs defaults) {
            $ = new GetBillingUsagePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param from The start timestamp for the data range in Unix epoch format.
         * 
         * @return builder
         * 
         */
        public Builder from(@Nullable Integer from) {
            $.from = from;
            return this;
        }

        /**
         * @param metricType The type of billing metric to retrieve. Must be one of: `queries`, `limits`, `decisions`, `filter-chains`, `monitors`, `records`.
         * 
         * @return builder
         * 
         */
        public Builder metricType(String metricType) {
            $.metricType = metricType;
            return this;
        }

        /**
         * @param to The end timestamp for the data range in Unix epoch format.
         * 
         * @return builder
         * 
         */
        public Builder to(@Nullable Integer to) {
            $.to = to;
            return this;
        }

        public GetBillingUsagePlainArgs build() {
            if ($.metricType == null) {
                throw new MissingRequiredPropertyException("GetBillingUsagePlainArgs", "metricType");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetTimeframeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetTimeframeArgs Empty = new DatasetTimeframeArgs();

    @Import(name="aggregation", required=true)
    private Output<String> aggregation;

    public Output<String> aggregation() {
        return this.aggregation;
    }

    @Import(name="cycles")
    private @Nullable Output<Integer> cycles;

    public Optional<Output<Integer>> cycles() {
        return Optional.ofNullable(this.cycles);
    }

    @Import(name="from")
    private @Nullable Output<Integer> from;

    public Optional<Output<Integer>> from() {
        return Optional.ofNullable(this.from);
    }

    @Import(name="to")
    private @Nullable Output<Integer> to;

    public Optional<Output<Integer>> to() {
        return Optional.ofNullable(this.to);
    }

    private DatasetTimeframeArgs() {}

    private DatasetTimeframeArgs(DatasetTimeframeArgs $) {
        this.aggregation = $.aggregation;
        this.cycles = $.cycles;
        this.from = $.from;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetTimeframeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetTimeframeArgs $;

        public Builder() {
            $ = new DatasetTimeframeArgs();
        }

        public Builder(DatasetTimeframeArgs defaults) {
            $ = new DatasetTimeframeArgs(Objects.requireNonNull(defaults));
        }

        public Builder aggregation(Output<String> aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        public Builder aggregation(String aggregation) {
            return aggregation(Output.of(aggregation));
        }

        public Builder cycles(@Nullable Output<Integer> cycles) {
            $.cycles = cycles;
            return this;
        }

        public Builder cycles(Integer cycles) {
            return cycles(Output.of(cycles));
        }

        public Builder from(@Nullable Output<Integer> from) {
            $.from = from;
            return this;
        }

        public Builder from(Integer from) {
            return from(Output.of(from));
        }

        public Builder to(@Nullable Output<Integer> to) {
            $.to = to;
            return this;
        }

        public Builder to(Integer to) {
            return to(Output.of(to));
        }

        public DatasetTimeframeArgs build() {
            if ($.aggregation == null) {
                throw new MissingRequiredPropertyException("DatasetTimeframeArgs", "aggregation");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ns1.TeamArgs;
import com.pulumi.ns1.Utilities;
import com.pulumi.ns1.inputs.TeamState;
import com.pulumi.ns1.outputs.TeamDnsRecordsAllow;
import com.pulumi.ns1.outputs.TeamDnsRecordsDeny;
import com.pulumi.ns1.outputs.TeamIpWhitelist;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a NS1 Team resource. This can be used to create, modify, and delete
 * teams. The credentials used must have the `manage_teams` permission set.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ns1.Team;
 * import com.pulumi.ns1.TeamArgs;
 * import com.pulumi.ns1.inputs.TeamIpWhitelistArgs;
 * import com.pulumi.ns1.inputs.TeamDnsRecordsAllowArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Team(&#34;example&#34;, TeamArgs.builder()        
 *             .accountManageUsers(false)
 *             .dnsViewZones(false)
 *             .ipWhitelists(            
 *                 TeamIpWhitelistArgs.builder()
 *                     .name(&#34;whitelist-1&#34;)
 *                     .values(                    
 *                         &#34;1.1.1.1&#34;,
 *                         &#34;2.2.2.2&#34;)
 *                     .build(),
 *                 TeamIpWhitelistArgs.builder()
 *                     .name(&#34;whitelist-2&#34;)
 *                     .values(                    
 *                         &#34;3.3.3.3&#34;,
 *                         &#34;4.4.4.4&#34;)
 *                     .build())
 *             .build());
 * 
 *         var example2 = new Team(&#34;example2&#34;, TeamArgs.builder()        
 *             .dataManageDatasources(true)
 *             .dnsRecordsAllows(TeamDnsRecordsAllowArgs.builder()
 *                 .domain(&#34;terraform.example.io&#34;)
 *                 .includeSubdomains(false)
 *                 .type(&#34;A&#34;)
 *                 .zone(&#34;example.io&#34;)
 *                 .build())
 *             .dnsViewZones(true)
 *             .dnsZonesAllows(&#34;mytest.zone&#34;)
 *             .dnsZonesAllowByDefault(true)
 *             .dnsZonesDenies(&#34;myother.zone&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## NS1 Documentation
 * 
 * [Team Api Docs](https://ns1.com/api#team)
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import ns1:index/team:Team &lt;name&gt; &lt;team_id&gt;`
 * ```
 * 
 */
@ResourceType(type="ns1:index/team:Team")
public class Team extends com.pulumi.resources.CustomResource {
    /**
     * Whether the team can modify account settings.
     * 
     */
    @Export(name="accountManageAccountSettings", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountManageAccountSettings;

    /**
     * @return Whether the team can modify account settings.
     * 
     */
    public Output<Optional<Boolean>> accountManageAccountSettings() {
        return Codegen.optional(this.accountManageAccountSettings);
    }
    /**
     * Whether the team can modify account apikeys.
     * 
     */
    @Export(name="accountManageApikeys", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountManageApikeys;

    /**
     * @return Whether the team can modify account apikeys.
     * 
     */
    public Output<Optional<Boolean>> accountManageApikeys() {
        return Codegen.optional(this.accountManageApikeys);
    }
    /**
     * Whether the team can manage ip whitelist.
     * 
     */
    @Export(name="accountManageIpWhitelist", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountManageIpWhitelist;

    /**
     * @return Whether the team can manage ip whitelist.
     * 
     */
    public Output<Optional<Boolean>> accountManageIpWhitelist() {
        return Codegen.optional(this.accountManageIpWhitelist);
    }
    /**
     * Whether the team can modify account payment methods.
     * 
     */
    @Export(name="accountManagePaymentMethods", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountManagePaymentMethods;

    /**
     * @return Whether the team can modify account payment methods.
     * 
     */
    public Output<Optional<Boolean>> accountManagePaymentMethods() {
        return Codegen.optional(this.accountManagePaymentMethods);
    }
    /**
     * No longer in use.
     * 
     * @deprecated
     * obsolete, should no longer be used
     * 
     */
    @Deprecated /* obsolete, should no longer be used */
    @Export(name="accountManagePlan", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountManagePlan;

    /**
     * @return No longer in use.
     * 
     */
    public Output<Optional<Boolean>> accountManagePlan() {
        return Codegen.optional(this.accountManagePlan);
    }
    /**
     * Whether the team can modify other teams in the account.
     * 
     */
    @Export(name="accountManageTeams", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountManageTeams;

    /**
     * @return Whether the team can modify other teams in the account.
     * 
     */
    public Output<Optional<Boolean>> accountManageTeams() {
        return Codegen.optional(this.accountManageTeams);
    }
    /**
     * Whether the team can modify account users.
     * 
     */
    @Export(name="accountManageUsers", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountManageUsers;

    /**
     * @return Whether the team can modify account users.
     * 
     */
    public Output<Optional<Boolean>> accountManageUsers() {
        return Codegen.optional(this.accountManageUsers);
    }
    /**
     * Whether the team can view activity logs.
     * 
     */
    @Export(name="accountViewActivityLog", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountViewActivityLog;

    /**
     * @return Whether the team can view activity logs.
     * 
     */
    public Output<Optional<Boolean>> accountViewActivityLog() {
        return Codegen.optional(this.accountViewActivityLog);
    }
    /**
     * Whether the team can view invoices.
     * 
     */
    @Export(name="accountViewInvoices", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountViewInvoices;

    /**
     * @return Whether the team can view invoices.
     * 
     */
    public Output<Optional<Boolean>> accountViewInvoices() {
        return Codegen.optional(this.accountViewInvoices);
    }
    /**
     * Whether the team can modify data feeds.
     * 
     */
    @Export(name="dataManageDatafeeds", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dataManageDatafeeds;

    /**
     * @return Whether the team can modify data feeds.
     * 
     */
    public Output<Optional<Boolean>> dataManageDatafeeds() {
        return Codegen.optional(this.dataManageDatafeeds);
    }
    /**
     * Whether the team can modify data sources.
     * 
     */
    @Export(name="dataManageDatasources", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dataManageDatasources;

    /**
     * @return Whether the team can modify data sources.
     * 
     */
    public Output<Optional<Boolean>> dataManageDatasources() {
        return Codegen.optional(this.dataManageDatasources);
    }
    /**
     * Whether the team can publish to data feeds.
     * 
     */
    @Export(name="dataPushToDatafeeds", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dataPushToDatafeeds;

    /**
     * @return Whether the team can publish to data feeds.
     * 
     */
    public Output<Optional<Boolean>> dataPushToDatafeeds() {
        return Codegen.optional(this.dataPushToDatafeeds);
    }
    /**
     * Whether the team can manage DHCP.
     * Only relevant for the DDI product.
     * 
     */
    @Export(name="dhcpManageDhcp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dhcpManageDhcp;

    /**
     * @return Whether the team can manage DHCP.
     * Only relevant for the DDI product.
     * 
     */
    public Output<Optional<Boolean>> dhcpManageDhcp() {
        return Codegen.optional(this.dhcpManageDhcp);
    }
    /**
     * Whether the team can view DHCP.
     * Only relevant for the DDI product.
     * 
     */
    @Export(name="dhcpViewDhcp", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dhcpViewDhcp;

    /**
     * @return Whether the team can view DHCP.
     * Only relevant for the DDI product.
     * 
     */
    public Output<Optional<Boolean>> dhcpViewDhcp() {
        return Codegen.optional(this.dhcpViewDhcp);
    }
    /**
     * Whether the team can modify the accounts zones.
     * 
     */
    @Export(name="dnsManageZones", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dnsManageZones;

    /**
     * @return Whether the team can modify the accounts zones.
     * 
     */
    public Output<Optional<Boolean>> dnsManageZones() {
        return Codegen.optional(this.dnsManageZones);
    }
    /**
     * List of records that the team may access.
     * 
     */
    @Export(name="dnsRecordsAllows", refs={List.class,TeamDnsRecordsAllow.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TeamDnsRecordsAllow>> dnsRecordsAllows;

    /**
     * @return List of records that the team may access.
     * 
     */
    public Output<Optional<List<TeamDnsRecordsAllow>>> dnsRecordsAllows() {
        return Codegen.optional(this.dnsRecordsAllows);
    }
    /**
     * List of records that the team may not access.
     * 
     */
    @Export(name="dnsRecordsDenies", refs={List.class,TeamDnsRecordsDeny.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TeamDnsRecordsDeny>> dnsRecordsDenies;

    /**
     * @return List of records that the team may not access.
     * 
     */
    public Output<Optional<List<TeamDnsRecordsDeny>>> dnsRecordsDenies() {
        return Codegen.optional(this.dnsRecordsDenies);
    }
    /**
     * Whether the team can view the accounts zones.
     * 
     */
    @Export(name="dnsViewZones", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dnsViewZones;

    /**
     * @return Whether the team can view the accounts zones.
     * 
     */
    public Output<Optional<Boolean>> dnsViewZones() {
        return Codegen.optional(this.dnsViewZones);
    }
    /**
     * If true, enable the `dns_zones_allow` list, otherwise enable the `dns_zones_deny` list.
     * 
     */
    @Export(name="dnsZonesAllowByDefault", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dnsZonesAllowByDefault;

    /**
     * @return If true, enable the `dns_zones_allow` list, otherwise enable the `dns_zones_deny` list.
     * 
     */
    public Output<Optional<Boolean>> dnsZonesAllowByDefault() {
        return Codegen.optional(this.dnsZonesAllowByDefault);
    }
    /**
     * List of zones that the team may access.
     * 
     */
    @Export(name="dnsZonesAllows", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> dnsZonesAllows;

    /**
     * @return List of zones that the team may access.
     * 
     */
    public Output<Optional<List<String>>> dnsZonesAllows() {
        return Codegen.optional(this.dnsZonesAllows);
    }
    /**
     * List of zones that the team may not access.
     * 
     */
    @Export(name="dnsZonesDenies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> dnsZonesDenies;

    /**
     * @return List of zones that the team may not access.
     * 
     */
    public Output<Optional<List<String>>> dnsZonesDenies() {
        return Codegen.optional(this.dnsZonesDenies);
    }
    /**
     * Array of IP addresses objects to chich to grant the team access. Each object includes a **name** (string), and **values** (array of strings) associated to each &#34;allow&#34; list.
     * 
     */
    @Export(name="ipWhitelists", refs={List.class,TeamIpWhitelist.class}, tree="[0,1]")
    private Output</* @Nullable */ List<TeamIpWhitelist>> ipWhitelists;

    /**
     * @return Array of IP addresses objects to chich to grant the team access. Each object includes a **name** (string), and **values** (array of strings) associated to each &#34;allow&#34; list.
     * 
     */
    public Output<Optional<List<TeamIpWhitelist>>> ipWhitelists() {
        return Codegen.optional(this.ipWhitelists);
    }
    /**
     * Whether the team can manage IPAM.
     * Only relevant for the DDI product.
     * 
     */
    @Export(name="ipamManageIpam", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipamManageIpam;

    /**
     * @return Whether the team can manage IPAM.
     * Only relevant for the DDI product.
     * 
     */
    public Output<Optional<Boolean>> ipamManageIpam() {
        return Codegen.optional(this.ipamManageIpam);
    }
    /**
     * Whether the team can view IPAM.
     * Only relevant for the DDI product.
     * 
     */
    @Export(name="ipamViewIpam", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ipamViewIpam;

    /**
     * @return Whether the team can view IPAM.
     * Only relevant for the DDI product.
     * 
     */
    public Output<Optional<Boolean>> ipamViewIpam() {
        return Codegen.optional(this.ipamViewIpam);
    }
    /**
     * Whether the team can modify monitoring jobs.
     * 
     */
    @Export(name="monitoringManageJobs", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> monitoringManageJobs;

    /**
     * @return Whether the team can modify monitoring jobs.
     * 
     */
    public Output<Optional<Boolean>> monitoringManageJobs() {
        return Codegen.optional(this.monitoringManageJobs);
    }
    /**
     * Whether the team can modify notification lists.
     * 
     */
    @Export(name="monitoringManageLists", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> monitoringManageLists;

    /**
     * @return Whether the team can modify notification lists.
     * 
     */
    public Output<Optional<Boolean>> monitoringManageLists() {
        return Codegen.optional(this.monitoringManageLists);
    }
    /**
     * Whether the team can view monitoring jobs.
     * 
     */
    @Export(name="monitoringViewJobs", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> monitoringViewJobs;

    /**
     * @return Whether the team can view monitoring jobs.
     * 
     */
    public Output<Optional<Boolean>> monitoringViewJobs() {
        return Codegen.optional(this.monitoringViewJobs);
    }
    /**
     * The free form name of the team.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The free form name of the team.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether the team can manage global active directory.
     * Only relevant for the DDI product.
     * 
     */
    @Export(name="securityManageActiveDirectory", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> securityManageActiveDirectory;

    /**
     * @return Whether the team can manage global active directory.
     * Only relevant for the DDI product.
     * 
     */
    public Output<Optional<Boolean>> securityManageActiveDirectory() {
        return Codegen.optional(this.securityManageActiveDirectory);
    }
    /**
     * Whether the team can manage global two factor authentication.
     * 
     */
    @Export(name="securityManageGlobal2fa", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> securityManageGlobal2fa;

    /**
     * @return Whether the team can manage global two factor authentication.
     * 
     */
    public Output<Optional<Boolean>> securityManageGlobal2fa() {
        return Codegen.optional(this.securityManageGlobal2fa);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Team(String name) {
        this(name, TeamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Team(String name, @Nullable TeamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Team(String name, @Nullable TeamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ns1:index/team:Team", name, args == null ? TeamArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Team(String name, Output<String> id, @Nullable TeamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ns1:index/team:Team", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Team get(String name, Output<String> id, @Nullable TeamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Team(name, id, state, options);
    }
}

// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RecordAnswerArgs extends com.pulumi.resources.ResourceArgs {

    public static final RecordAnswerArgs Empty = new RecordAnswerArgs();

    /**
     * Space delimited string of RDATA fields dependent on the record type.
     * 
     */
    @Import(name="answer")
    private @Nullable Output<String> answer;

    /**
     * @return Space delimited string of RDATA fields dependent on the record type.
     * 
     */
    public Optional<Output<String>> answer() {
        return Optional.ofNullable(this.answer);
    }

    @Import(name="meta")
    private @Nullable Output<Map<String,Object>> meta;

    public Optional<Output<Map<String,Object>>> meta() {
        return Optional.ofNullable(this.meta);
    }

    /**
     * The region (Answer Group really) that this answer
     * belongs to. This should be one of the names specified in `regions`. Only a
     * single `region` per answer is currently supported. If you want an answer in
     * multiple regions, duplicating the answer (including metadata) is the correct
     * approach.
     * * `  meta ` - (Optional) meta is supported at the `answer` level. Meta
     *   is documented below.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region (Answer Group really) that this answer
     * belongs to. This should be one of the names specified in `regions`. Only a
     * single `region` per answer is currently supported. If you want an answer in
     * multiple regions, duplicating the answer (including metadata) is the correct
     * approach.
     * * `  meta ` - (Optional) meta is supported at the `answer` level. Meta
     *   is documented below.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private RecordAnswerArgs() {}

    private RecordAnswerArgs(RecordAnswerArgs $) {
        this.answer = $.answer;
        this.meta = $.meta;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RecordAnswerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RecordAnswerArgs $;

        public Builder() {
            $ = new RecordAnswerArgs();
        }

        public Builder(RecordAnswerArgs defaults) {
            $ = new RecordAnswerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param answer Space delimited string of RDATA fields dependent on the record type.
         * 
         * @return builder
         * 
         */
        public Builder answer(@Nullable Output<String> answer) {
            $.answer = answer;
            return this;
        }

        /**
         * @param answer Space delimited string of RDATA fields dependent on the record type.
         * 
         * @return builder
         * 
         */
        public Builder answer(String answer) {
            return answer(Output.of(answer));
        }

        public Builder meta(@Nullable Output<Map<String,Object>> meta) {
            $.meta = meta;
            return this;
        }

        public Builder meta(Map<String,Object> meta) {
            return meta(Output.of(meta));
        }

        /**
         * @param region The region (Answer Group really) that this answer
         * belongs to. This should be one of the names specified in `regions`. Only a
         * single `region` per answer is currently supported. If you want an answer in
         * multiple regions, duplicating the answer (including metadata) is the correct
         * approach.
         * * `  meta ` - (Optional) meta is supported at the `answer` level. Meta
         *   is documented below.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region (Answer Group really) that this answer
         * belongs to. This should be one of the names specified in `regions`. Only a
         * single `region` per answer is currently supported. If you want an answer in
         * multiple regions, duplicating the answer (including metadata) is the correct
         * approach.
         * * `  meta ` - (Optional) meta is supported at the `answer` level. Meta
         *   is documented below.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public RecordAnswerArgs build() {
            return $;
        }
    }

}

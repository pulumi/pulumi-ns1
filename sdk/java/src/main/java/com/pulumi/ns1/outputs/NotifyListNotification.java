// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class NotifyListNotification {
    /**
     * @return Configuration details for the given notifier type.
     * 
     */
    private Map<String,Object> config;
    /**
     * @return The type of notifier. Available notifiers are indicated in /notifytypes endpoint.
     * 
     */
    private String type;

    private NotifyListNotification() {}
    /**
     * @return Configuration details for the given notifier type.
     * 
     */
    public Map<String,Object> config() {
        return this.config;
    }
    /**
     * @return The type of notifier. Available notifiers are indicated in /notifytypes endpoint.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NotifyListNotification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> config;
        private String type;
        public Builder() {}
        public Builder(NotifyListNotification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder config(Map<String,Object> config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public NotifyListNotification build() {
            final var o = new NotifyListNotification();
            o.config = config;
            o.type = type;
            return o;
        }
    }
}

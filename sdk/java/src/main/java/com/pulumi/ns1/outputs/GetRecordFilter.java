// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRecordFilter {
    private Map<String,Object> config;
    private Boolean disabled;
    private String filter;

    private GetRecordFilter() {}
    public Map<String,Object> config() {
        return this.config;
    }
    public Boolean disabled() {
        return this.disabled;
    }
    public String filter() {
        return this.filter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecordFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> config;
        private Boolean disabled;
        private String filter;
        public Builder() {}
        public Builder(GetRecordFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.disabled = defaults.disabled;
    	      this.filter = defaults.filter;
        }

        @CustomType.Setter
        public Builder config(Map<String,Object> config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetRecordFilter", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder disabled(Boolean disabled) {
            if (disabled == null) {
              throw new MissingRequiredPropertyException("GetRecordFilter", "disabled");
            }
            this.disabled = disabled;
            return this;
        }
        @CustomType.Setter
        public Builder filter(String filter) {
            if (filter == null) {
              throw new MissingRequiredPropertyException("GetRecordFilter", "filter");
            }
            this.filter = filter;
            return this;
        }
        public GetRecordFilter build() {
            final var _resultValue = new GetRecordFilter();
            _resultValue.config = config;
            _resultValue.disabled = disabled;
            _resultValue.filter = filter;
            return _resultValue;
        }
    }
}

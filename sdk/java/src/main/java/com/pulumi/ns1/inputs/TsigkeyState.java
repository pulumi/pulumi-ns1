// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TsigkeyState extends com.pulumi.resources.ResourceArgs {

    public static final TsigkeyState Empty = new TsigkeyState();

    /**
     * The algorithm used to hash the TSIG key&#39;s secret.
     * 
     */
    @Import(name="algorithm")
    private @Nullable Output<String> algorithm;

    /**
     * @return The algorithm used to hash the TSIG key&#39;s secret.
     * 
     */
    public Optional<Output<String>> algorithm() {
        return Optional.ofNullable(this.algorithm);
    }

    /**
     * The free form name of the tsigkey.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The free form name of the tsigkey.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The key&#39;s secret to be hashed.
     * 
     */
    @Import(name="secret")
    private @Nullable Output<String> secret;

    /**
     * @return The key&#39;s secret to be hashed.
     * 
     */
    public Optional<Output<String>> secret() {
        return Optional.ofNullable(this.secret);
    }

    private TsigkeyState() {}

    private TsigkeyState(TsigkeyState $) {
        this.algorithm = $.algorithm;
        this.name = $.name;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TsigkeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TsigkeyState $;

        public Builder() {
            $ = new TsigkeyState();
        }

        public Builder(TsigkeyState defaults) {
            $ = new TsigkeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm The algorithm used to hash the TSIG key&#39;s secret.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(@Nullable Output<String> algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param algorithm The algorithm used to hash the TSIG key&#39;s secret.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(String algorithm) {
            return algorithm(Output.of(algorithm));
        }

        /**
         * @param name The free form name of the tsigkey.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The free form name of the tsigkey.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secret The key&#39;s secret to be hashed.
         * 
         * @return builder
         * 
         */
        public Builder secret(@Nullable Output<String> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret The key&#39;s secret to be hashed.
         * 
         * @return builder
         * 
         */
        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public TsigkeyState build() {
            return $;
        }
    }

}

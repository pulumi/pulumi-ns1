// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.ns1.outputs.GetBillingUsageByNetworkDaily;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBillingUsageByNetwork {
    /**
     * @return Total billable queries for this network.
     * 
     */
    private Integer billableQueries;
    /**
     * @return Clean queries for this day.
     * 
     */
    private Integer cleanQueries;
    /**
     * @return Daily breakdown containing:
     * 
     */
    private List<GetBillingUsageByNetworkDaily> dailies;
    /**
     * @return DDoS queries for this day.
     * 
     */
    private Integer ddosQueries;
    /**
     * @return The network ID.
     * 
     */
    private Integer network;
    /**
     * @return NXD responses for this day.
     * 
     */
    private Integer nxdResponses;

    private GetBillingUsageByNetwork() {}
    /**
     * @return Total billable queries for this network.
     * 
     */
    public Integer billableQueries() {
        return this.billableQueries;
    }
    /**
     * @return Clean queries for this day.
     * 
     */
    public Integer cleanQueries() {
        return this.cleanQueries;
    }
    /**
     * @return Daily breakdown containing:
     * 
     */
    public List<GetBillingUsageByNetworkDaily> dailies() {
        return this.dailies;
    }
    /**
     * @return DDoS queries for this day.
     * 
     */
    public Integer ddosQueries() {
        return this.ddosQueries;
    }
    /**
     * @return The network ID.
     * 
     */
    public Integer network() {
        return this.network;
    }
    /**
     * @return NXD responses for this day.
     * 
     */
    public Integer nxdResponses() {
        return this.nxdResponses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBillingUsageByNetwork defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer billableQueries;
        private Integer cleanQueries;
        private List<GetBillingUsageByNetworkDaily> dailies;
        private Integer ddosQueries;
        private Integer network;
        private Integer nxdResponses;
        public Builder() {}
        public Builder(GetBillingUsageByNetwork defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billableQueries = defaults.billableQueries;
    	      this.cleanQueries = defaults.cleanQueries;
    	      this.dailies = defaults.dailies;
    	      this.ddosQueries = defaults.ddosQueries;
    	      this.network = defaults.network;
    	      this.nxdResponses = defaults.nxdResponses;
        }

        @CustomType.Setter
        public Builder billableQueries(Integer billableQueries) {
            if (billableQueries == null) {
              throw new MissingRequiredPropertyException("GetBillingUsageByNetwork", "billableQueries");
            }
            this.billableQueries = billableQueries;
            return this;
        }
        @CustomType.Setter
        public Builder cleanQueries(Integer cleanQueries) {
            if (cleanQueries == null) {
              throw new MissingRequiredPropertyException("GetBillingUsageByNetwork", "cleanQueries");
            }
            this.cleanQueries = cleanQueries;
            return this;
        }
        @CustomType.Setter
        public Builder dailies(List<GetBillingUsageByNetworkDaily> dailies) {
            if (dailies == null) {
              throw new MissingRequiredPropertyException("GetBillingUsageByNetwork", "dailies");
            }
            this.dailies = dailies;
            return this;
        }
        public Builder dailies(GetBillingUsageByNetworkDaily... dailies) {
            return dailies(List.of(dailies));
        }
        @CustomType.Setter
        public Builder ddosQueries(Integer ddosQueries) {
            if (ddosQueries == null) {
              throw new MissingRequiredPropertyException("GetBillingUsageByNetwork", "ddosQueries");
            }
            this.ddosQueries = ddosQueries;
            return this;
        }
        @CustomType.Setter
        public Builder network(Integer network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("GetBillingUsageByNetwork", "network");
            }
            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder nxdResponses(Integer nxdResponses) {
            if (nxdResponses == null) {
              throw new MissingRequiredPropertyException("GetBillingUsageByNetwork", "nxdResponses");
            }
            this.nxdResponses = nxdResponses;
            return this;
        }
        public GetBillingUsageByNetwork build() {
            final var _resultValue = new GetBillingUsageByNetwork();
            _resultValue.billableQueries = billableQueries;
            _resultValue.cleanQueries = cleanQueries;
            _resultValue.dailies = dailies;
            _resultValue.ddosQueries = ddosQueries;
            _resultValue.network = network;
            _resultValue.nxdResponses = nxdResponses;
            return _resultValue;
        }
    }
}

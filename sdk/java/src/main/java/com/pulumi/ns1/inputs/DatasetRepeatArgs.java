// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class DatasetRepeatArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetRepeatArgs Empty = new DatasetRepeatArgs();

    @Import(name="endAfterN", required=true)
    private Output<Integer> endAfterN;

    public Output<Integer> endAfterN() {
        return this.endAfterN;
    }

    @Import(name="repeatsEvery", required=true)
    private Output<String> repeatsEvery;

    public Output<String> repeatsEvery() {
        return this.repeatsEvery;
    }

    @Import(name="start", required=true)
    private Output<Integer> start;

    public Output<Integer> start() {
        return this.start;
    }

    private DatasetRepeatArgs() {}

    private DatasetRepeatArgs(DatasetRepeatArgs $) {
        this.endAfterN = $.endAfterN;
        this.repeatsEvery = $.repeatsEvery;
        this.start = $.start;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetRepeatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetRepeatArgs $;

        public Builder() {
            $ = new DatasetRepeatArgs();
        }

        public Builder(DatasetRepeatArgs defaults) {
            $ = new DatasetRepeatArgs(Objects.requireNonNull(defaults));
        }

        public Builder endAfterN(Output<Integer> endAfterN) {
            $.endAfterN = endAfterN;
            return this;
        }

        public Builder endAfterN(Integer endAfterN) {
            return endAfterN(Output.of(endAfterN));
        }

        public Builder repeatsEvery(Output<String> repeatsEvery) {
            $.repeatsEvery = repeatsEvery;
            return this;
        }

        public Builder repeatsEvery(String repeatsEvery) {
            return repeatsEvery(Output.of(repeatsEvery));
        }

        public Builder start(Output<Integer> start) {
            $.start = start;
            return this;
        }

        public Builder start(Integer start) {
            return start(Output.of(start));
        }

        public DatasetRepeatArgs build() {
            if ($.endAfterN == null) {
                throw new MissingRequiredPropertyException("DatasetRepeatArgs", "endAfterN");
            }
            if ($.repeatsEvery == null) {
                throw new MissingRequiredPropertyException("DatasetRepeatArgs", "repeatsEvery");
            }
            if ($.start == null) {
                throw new MissingRequiredPropertyException("DatasetRepeatArgs", "start");
            }
            return $;
        }
    }

}

// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ns1;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ns1.inputs.ApplicationDefaultConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationArgs Empty = new ApplicationArgs();

    /**
     * Indicates whether or not this application is currently active and usable for traffic
     * steering.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Indicates whether or not this application is currently active and usable for traffic
     * steering.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * The amount of time (in milliseconds) the browser should wait before running
     * measurements.
     * 
     */
    @Import(name="browserWaitMillis")
    private @Nullable Output<Integer> browserWaitMillis;

    /**
     * @return The amount of time (in milliseconds) the browser should wait before running
     * measurements.
     * 
     */
    public Optional<Output<Integer>> browserWaitMillis() {
        return Optional.ofNullable(this.browserWaitMillis);
    }

    /**
     * Default job configuration. If a field is present here and not on a specific job
     * associated with this application, the default value specified here is used..
     * 
     */
    @Import(name="defaultConfig")
    private @Nullable Output<ApplicationDefaultConfigArgs> defaultConfig;

    /**
     * @return Default job configuration. If a field is present here and not on a specific job
     * associated with this application, the default value specified here is used..
     * 
     */
    public Optional<Output<ApplicationDefaultConfigArgs>> defaultConfig() {
        return Optional.ofNullable(this.defaultConfig);
    }

    /**
     * Number of jobs to measure per user impression.
     * 
     */
    @Import(name="jobsPerTransaction")
    private @Nullable Output<Integer> jobsPerTransaction;

    /**
     * @return Number of jobs to measure per user impression.
     * 
     */
    public Optional<Output<Integer>> jobsPerTransaction() {
        return Optional.ofNullable(this.jobsPerTransaction);
    }

    /**
     * Descriptive name for this Pulsar app.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Descriptive name for this Pulsar app.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private ApplicationArgs() {}

    private ApplicationArgs(ApplicationArgs $) {
        this.active = $.active;
        this.browserWaitMillis = $.browserWaitMillis;
        this.defaultConfig = $.defaultConfig;
        this.jobsPerTransaction = $.jobsPerTransaction;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationArgs $;

        public Builder() {
            $ = new ApplicationArgs();
        }

        public Builder(ApplicationArgs defaults) {
            $ = new ApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Indicates whether or not this application is currently active and usable for traffic
         * steering.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Indicates whether or not this application is currently active and usable for traffic
         * steering.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param browserWaitMillis The amount of time (in milliseconds) the browser should wait before running
         * measurements.
         * 
         * @return builder
         * 
         */
        public Builder browserWaitMillis(@Nullable Output<Integer> browserWaitMillis) {
            $.browserWaitMillis = browserWaitMillis;
            return this;
        }

        /**
         * @param browserWaitMillis The amount of time (in milliseconds) the browser should wait before running
         * measurements.
         * 
         * @return builder
         * 
         */
        public Builder browserWaitMillis(Integer browserWaitMillis) {
            return browserWaitMillis(Output.of(browserWaitMillis));
        }

        /**
         * @param defaultConfig Default job configuration. If a field is present here and not on a specific job
         * associated with this application, the default value specified here is used..
         * 
         * @return builder
         * 
         */
        public Builder defaultConfig(@Nullable Output<ApplicationDefaultConfigArgs> defaultConfig) {
            $.defaultConfig = defaultConfig;
            return this;
        }

        /**
         * @param defaultConfig Default job configuration. If a field is present here and not on a specific job
         * associated with this application, the default value specified here is used..
         * 
         * @return builder
         * 
         */
        public Builder defaultConfig(ApplicationDefaultConfigArgs defaultConfig) {
            return defaultConfig(Output.of(defaultConfig));
        }

        /**
         * @param jobsPerTransaction Number of jobs to measure per user impression.
         * 
         * @return builder
         * 
         */
        public Builder jobsPerTransaction(@Nullable Output<Integer> jobsPerTransaction) {
            $.jobsPerTransaction = jobsPerTransaction;
            return this;
        }

        /**
         * @param jobsPerTransaction Number of jobs to measure per user impression.
         * 
         * @return builder
         * 
         */
        public Builder jobsPerTransaction(Integer jobsPerTransaction) {
            return jobsPerTransaction(Output.of(jobsPerTransaction));
        }

        /**
         * @param name Descriptive name for this Pulsar app.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Descriptive name for this Pulsar app.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ApplicationArgs build() {
            return $;
        }
    }

}

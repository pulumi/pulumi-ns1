// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a NS1 Pulsar application resource. This can be used to create, modify, and delete applications.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ns1 from "@pulumi/ns1";
 *
 * // Create a new pulsar application with default config
 * const ns1App = new ns1.Application("ns1_app", {
 *     defaultConfig: {
 *         http: true,
 *         https: false,
 *         job_timeout_millis: 100,
 *         request_timeout_millis: 100,
 *         static_values: true,
 *     },
 * });
 * ```
 * ## NS1 Documentation
 *
 * [Application Api Docs](https://ns1.com/api#get-list-pulsar-applications)
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import ns1:index/application:Application `ns1_application`
 * ```
 *
 *  So for the example above
 *
 * ```sh
 *  $ pulumi import ns1:index/application:Application example terraform.example.io`
 * ```
 */
export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ns1:index/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * Indicates whether or not this application is currently active and usable for traffic
     * steering.
     */
    public readonly active!: pulumi.Output<boolean | undefined>;
    /**
     * The amount of time (in milliseconds) the browser should wait before running
     * measurements.
     */
    public readonly browserWaitMillis!: pulumi.Output<number | undefined>;
    /**
     * -(Optional) Default job configuration. If a field is present here and not on a specific job
     * associated with this application, the default value specified here is used..
     */
    public readonly defaultConfig!: pulumi.Output<outputs.ApplicationDefaultConfig | undefined>;
    /**
     * -(Optional) Number of jobs to measure per user impression.
     */
    public readonly jobsPerTransaction!: pulumi.Output<number | undefined>;
    /**
     * Descriptive name for this Pulsar app.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            inputs["active"] = state ? state.active : undefined;
            inputs["browserWaitMillis"] = state ? state.browserWaitMillis : undefined;
            inputs["defaultConfig"] = state ? state.defaultConfig : undefined;
            inputs["jobsPerTransaction"] = state ? state.jobsPerTransaction : undefined;
            inputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            inputs["active"] = args ? args.active : undefined;
            inputs["browserWaitMillis"] = args ? args.browserWaitMillis : undefined;
            inputs["defaultConfig"] = args ? args.defaultConfig : undefined;
            inputs["jobsPerTransaction"] = args ? args.jobsPerTransaction : undefined;
            inputs["name"] = args ? args.name : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Application.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * Indicates whether or not this application is currently active and usable for traffic
     * steering.
     */
    readonly active?: pulumi.Input<boolean>;
    /**
     * The amount of time (in milliseconds) the browser should wait before running
     * measurements.
     */
    readonly browserWaitMillis?: pulumi.Input<number>;
    /**
     * -(Optional) Default job configuration. If a field is present here and not on a specific job
     * associated with this application, the default value specified here is used..
     */
    readonly defaultConfig?: pulumi.Input<inputs.ApplicationDefaultConfig>;
    /**
     * -(Optional) Number of jobs to measure per user impression.
     */
    readonly jobsPerTransaction?: pulumi.Input<number>;
    /**
     * Descriptive name for this Pulsar app.
     */
    readonly name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * Indicates whether or not this application is currently active and usable for traffic
     * steering.
     */
    readonly active?: pulumi.Input<boolean>;
    /**
     * The amount of time (in milliseconds) the browser should wait before running
     * measurements.
     */
    readonly browserWaitMillis?: pulumi.Input<number>;
    /**
     * -(Optional) Default job configuration. If a field is present here and not on a specific job
     * associated with this application, the default value specified here is used..
     */
    readonly defaultConfig?: pulumi.Input<inputs.ApplicationDefaultConfig>;
    /**
     * -(Optional) Number of jobs to measure per user impression.
     */
    readonly jobsPerTransaction?: pulumi.Input<number>;
    /**
     * Descriptive name for this Pulsar app.
     */
    readonly name?: pulumi.Input<string>;
}
